= show_error_messages!(post)
= form_for(post, html: { name: "form", novalidate: true }) do |f|
  .form-group
    = f.label :title, required: true
    = f.text_field :title, class: "form-control"
  .form-group
    = f.label :description
    = f.text_area :description, rows: "10", class: "form-control"
  .form-group
    = f.label :category, required: true
    = f.select :category_id, Category.all.sort_by{ |a| a.name.downcase }.map{ |cat| [cat.name, cat.id] }, { include_blank: true }, { class: "form-control" }
  .form-group
    = f.label :tag_list
    = f.select :tag_list, f.object.tags || [], { selected: f.object.tags }, multiple: true, data: { placeholder: t('application.tips.entertag') }, id: "tags-js", class: "form-control"

  - if current_user.manages? current_organization
    .form-group
      = f.label :user, class: "control-label"
      = f.select :user_id, options_for_select(current_organization.members.active.order("members.member_uid").map{ |mem| ["#{mem.member_uid} #{mem.user.to_s}", mem.user_id] }, selected: post.user.id || current_user.id), {}, { id: "select2", class: "form-control", required: true }
    = f.hidden_field :publisher_id, value: current_user.id

  %p.help-block
    = t "global.required_field"

  = f.button label_button, class: "btn btn-default", style: "margin-bottom: 20px;"

:javascript

  $("#select2").select2({
    formatNoMatches: function() {
        return "#{t 'application.tips.user_not_found'}";
    }
  })
